/*  Допишите (с использованием рекурсивного процесса) функцию sequenceSum(), которая находит сумму последовательности целых чисел.
Последовательность задается двумя значениями: begin - начало последовательности, end - конец последовательности.
Например: begin = 2 и end = 6 дают нам такую последовательность 2, 3, 4, 5, 6.
Сумма такой последовательности будет: 20.
Последовательность, в которой begin > end, не содержит ни одного числа, т.е. является "пустой".
Вычислить сумму чисел такой последовательности не представляется возможным, в этом случае возвращаем NaN
Сумма чисел последовательности, в которой begin === end, равна begin (или end)   */

export default function sequenceSum(begin, end){
    if(begin === end){
        return begin;
    }
    if (begin > end){
        return NaN;
    }
    return begin + sequenceSum(begin +1, end);
}

// NaN (т.к. это "пустая" последовательность)
sequenceSum(7, 2);
// 0 (т.к. это единственное число, входящее в последовательность)
sequenceSum(0, 0);
// 6 (т.к. это единственное число, входящее в последовательность)
sequenceSum(6, 6);

console.log(sequenceSum(2,6));